<?php
/** @var \IdeaInYou\StoreLocator\Block\Store $block */
$block->createStoreLocator();
$collection = $block->getStoreLocatorCollection()->getItems();
?>
<?php
$i =0;
$storeArr = [];
foreach ($collection as $item):
    $i += 1;
    $storeArr[$i] = [
        $item->getData('entity_id'),
        $item->getData('storeName') . ' ' . $item->getData('description')
    ];
endforeach;
?>
<script>
    function initMap() {

        const mapZoom = document.querySelectorAll('.mapZoom');
        for(let i = 0; i < mapZoom.length; i++) {

            mapZoom[i].addEventListener( 'click', function( e ) {
                e.preventDefault();

                let ltt = + mapZoom[i].getAttribute('data-latitude');
                let lnt = + mapZoom[i].getAttribute('data-longitude');

                map.setCenter({
                    lat: ltt,
                    lng: lnt,
                });

                map.setZoom(15);

            });

        }


        var input = document.getElementById('searchTextField');
        var autocomplete = new google.maps.places.Autocomplete(input);
        autocomplete.addListener('place_changed', function() {
            var place = autocomplete.getPlace();

            place.address_components.forEach(function(item, i) {
                if(item.types[0] =='country'){
                    document.getElementById('country').value = item.long_name;
                }
                if(item.types[0] =='administrative_area_level_1'){
                    document.getElementById('state').value = item.long_name;
                }
                if(item.types[0] =='locality'){
                    document.getElementById('city').value = item.long_name;
                }
                if(item.types[0] =='route'){
                    document.getElementById('address').value = item.long_name;
                }
                if(item.types[0] =='postal_code'){
                    document.getElementById('post').value = item.long_name;
                }
            });
        });

        const map = new google.maps.Map(document.getElementById("map"), {
            zoom: 3,
            center: { lat: 48, lng: 25 },
        });

        const infoWindow = new google.maps.InfoWindow({
            content: "",
            disableAutoPan: true,
        });

        // Create an array of alphabetical characters used to label the markers.
        const labels = "ABCDEFGHIJKLMNOPQRSTUVWXYZ";
        const mapTitle = <?php echo json_encode($storeArr); ?>;

        // Add some markers to the map.1

        const markers = locations.map((position, i) => {
            const label = labels[i % labels.length];

            const marker = new google.maps.Marker({
                position,
                map,
                title: `${mapTitle[i + 1][1]}`,
                label: `${mapTitle[i + 1][0]}`,
                optimized: false,
            });

            // markers can only be keyboard focusable when they have click listeners
            // open info window when marker is clicked
            marker.addListener("click", () => {
                infoWindow.close();
                infoWindow.setContent(marker.getTitle());
                infoWindow.open(marker.getMap(), marker);
            });
            return marker;
        });

        // Add a marker clusterer to manage the markers.
        const markerCluster = new markerClusterer.MarkerClusterer({ map, markers });

    }



    const locations = [

        <?php foreach ($collection as $item):?>

        { lat: <?= $item->getData('latitude'); ?>, lng: <?= $item->getData('longitude'); ?> },
        <?php endforeach ?>
    ];
    window.initMap = initMap;


    function autoAddress() {
        var input = document.getElementById('auto-address');
        var autocomplete = new google.maps.places.Autocomplete(input);
    }
    google.maps.event.addDomListener(document.getElementById('auto-address'), 'keypress', autoAddress);


</script>


<script type="text/x-magento-init">
    {
        "*": {
            "storeLocatorForm": {
                "formSelector": "#storeLocatorForm",
                "submitUrl": "<?= $block->getUrl('ideaInYou_storeLocator/ajax/save') ?>",
                "messageSelector": "#addReviewMessage"
            }
        }
    }

</script>

